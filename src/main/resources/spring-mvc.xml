<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!--扫描controller （controller层注入）-->
	<context:component-scan base-package="com.chankin.ssms.web.controller" />

	<!--对模型视图添加前后缀-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="vieResolver"
		p:prefix="/WEB-INF/views/" p:suffix=".jsp" />

	<!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
	两个bean,是spring MVC为@Controllers分发请求所必须的 -->
	<!-- 指定自己定义的validator -->
	<mvc:annotation-driven validator="validator" />

	<!--validator ConversionService 在使用mvc:annotation-driven 会自动注册-->
	<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
	<bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" id="validator"
		p:providerClass="org.hibernate.validator.HibernateValidator" p:validationMessageSource-ref="messageSource" />

	<!--国际化的消息资源文件（本系统中主要用于显示、错误信息的置定制-->
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<mvc:interceptors>
		<!--检测请求中的参数并且改变地区信息。它调用LoacalResolver.setLocal()进行配置-->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="siteLanguage" />
	</mvc:interceptors>
	<!--通过cookie寻找客户端特定的语言信息 默认中文-->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieMaxAge="100000"
		p:cookieName="clientlanguage" p:defaultLocale="zh_CN" />

	<!-- 配置springMVC处理上传文件的信息 -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="1048576000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 注解适配器  支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
		id="mappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 支持返回json -->

</beans>